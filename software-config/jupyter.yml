# run miniconda.yml once after reinstall before this
- hosts: jupyterhosts
  vars_files:
    - ./adminvars.yml
  roles:
    - evandam.conda
  tasks:
    - name: install mamba (a faster conda)
      conda:
        name:
          - mamba
        channels: conda-forge
        executable: /usr/local/anaconda/bin/conda
    - name: install scientific libraries
      conda:
        name:
          - pyodbc
          - fonts-anaconda
          - virtualenv
          - plotly
          - scipy
          - matplotlib
          - bokeh
          - seaborn
          - ipympl
          - mpld3
          - jupyterlab
          - jupyterhub
          - sudospawner
          - jupyterhub-idle-culler
          - oauthenticator
          - jupyterlab-git
          - jupyterlab_widgets
          - hdf5
          - netcdf4
          - xarray
          - satpy
          - sympy
          - geopandas
          - geojson
          - folium
          - nbconvert
          - pandoc
          - psycopg2
          - k3d
          #- texlive-core
        channels: conda-forge
        executable: /usr/local/anaconda/bin/mamba
    - name: create jupyterhub service user
      user:
        name: jupyterhub
        comment: Jupytehub service user
        local: yes
        system: yes
        password: !
        create_home: no
        shell: /bin/false
    - name: Create jupyterhub config catalog
      file:
        name: /etc/jupyterhub
        state: directory
        owner: jupyterhub
        group: jupyterhub
        mode: 0755
    - name: Create jupyterhub basic config
      shell:
        cmd: |
          source /usr/local/anaconda/bin/activate
          /usr/local/anaconda/bin/jupyterhub --generate-config -f /etc/jupyterhub/jupyterhub_config.py
        creates: /etc/jupyterhub/jupyterhub_config.py
    - name: Restrict access to jupyterhub config
      file:
        name: /etc/jupyterhub/jupyterhub_config.py
        owner: jupyterhub
        group: jupyterhub
        mode: 0600
    - name: Make jupyterlab the default interface
      lineinfile:
        path: /etc/jupyterhub/jupyterhub_config.py
        line: c.Spawner.default_url = '/lab'
      notify:
        - Restart jupyterhub
    - name: Jupyterhub backend db connection (postgres)
      lineinfile:
        path: /etc/jupyterhub/jupyterhub_config.py
        line: c.JupyterHub.db_url  = "postgresql://jupdb@jupdb:{{ dbpassword }}@jupdb.postgres.database.azure.com:5432/jupyter?sslmode=require"
        state: absent
      no_log: True
      notify:
        - Restart jupyterhub
    - name: Jupyterhub backend db connection (Azure SQL)
      blockinfile:
        path: /etc/jupyterhub/jupyterhub_config.py
        marker: "#{mark} DB BACKEND SETUP (ANSIBLE MANAGED BLOCK)"
        block: |
          import  urllib
          params = urllib.parse.quote_plus(r'Driver={ODBC Driver 17 for SQL Server};'
                                          +r'Server={{ azure_sql_server }};'
                                          +r'Database={{ azure_sql_database }};UID={{ azure_sql_uid }};Pwd={{ azure_sql_password }};'
                                          +r'Encrypt=yes;TrustServerCertificate=yes;Connection Timeout=30;')
          c.JupyterHub.db_url = 'mssql+pyodbc:///?odbc_connect={}'.format(params)
        state: present
      no_log: True
      notify:
        - Restart jupyterhub
    - name: set up environment for jupyterhub systemd service
      copy:
        dest: /etc/jupyterhub/condaenv
        content: |
          AAD_TENANT_ID='{{ aad_tenant_id }}'
          MINICONDA_DIR=/usr/local/anaconda
          PATH=/usr/local/texlive/bin/x86_64-linux/:/usr/local/anaconda/bin:/bin:/usr/bin
        mode: 0644
      notify:
        - Restart jupyterhub
    - name: allow jupyterhub user to spawn kernel as other users
      copy:
        dest: /etc/sudoers.d/jupyterhub
        content: |
          jupyterhub ALL=(ALL) NOPASSWD:/usr/local/anaconda/bin/sudospawner
        mode: 0640
    - name: enable idle server culler
      blockinfile:
        path: /etc/jupyterhub/jupyterhub_config.py
        marker: "#{mark} CULL IDLE SETUP (ANSIBLE MANAGED BLOCK)"
        block: |
          c.JupyterHub.services = [
              {
                'name': 'cull-idle',
                'admin': True,
                'command': ['/usr/local/anaconda/bin/cull_idle_servers.py', '--timeout=3600'],
              }
            ]
      notify:
        - Restart jupyterhub
    - name: Setup jupyterhub AAD authentication
      blockinfile:
        path: /etc/jupyterhub/jupyterhub_config.py
        marker: "#{mark} AAD LOGIN (ANSIBLE MANAGED BLOCK)"
        block: |
          import os
          from oauthenticator.azuread import AzureAdOAuthenticator
          c.JupyterHub.authenticator_class = AzureAdOAuthenticator
          c.Application.log_level = 'DEBUG'
          c.AzureAdOAuthenticator.tenant_id = os.environ.get('AAD_TENANT_ID')
          c.AzureAdOAuthenticator.oauth_callback_url = '{{ aad_oauth_callback_url }}'
          c.AzureAdOAuthenticator.client_id = '{{ aad_client_id }}'
          c.AzureAdOAuthenticator.client_secret = '{{ aad_client_secret }}'
          c.AzureAdOAuthenticator.username_claim="preferred_username"
      notify:
        - Restart jupyterhub

    - name: Create systemd unit file for jupyterhub
      copy:
        dest: /etc/systemd/system/jupyterhub.service
        content: |
          [Unit]
          Description=Jupyterhub
          StartLimitInterval=200
          StartLimitBurst=5
          After=network-online.target

          [Service]
          User=jupyterhub
          EnvironmentFile=/etc/jupyterhub/condaenv
          ExecStart=/usr/local/anaconda/bin/jupyterhub --JupyterHub.spawner_class=sudospawner.SudoSpawner
          WorkingDirectory=/etc/jupyterhub
          Restart=always

          [Install]
          WantedBy=multi-user.target
        mode: 0644
    - name: Establish jupyterhub system service
      systemd:
        name: jupyterhub
        enabled: yes
        daemon_reload: yes
        state: started
  handlers:
    - name: Restart jupyterhub
      systemd:
        name: jupyterhub
        state: restarted
# TODO
# add jupyterlab widget plots (only works in notebook, not in console)
#jupyter labextension install @jupyter-widgets/jupyterlab-manager
